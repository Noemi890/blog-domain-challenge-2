generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  password  String
  profile   Profile?
  comment   Comment[]
  post      Post[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt 
}

model Profile {
  id          Int       @id @default(autoincrement())
  userId      Int       @unique
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  firstName   String
  lastName    String
  age         Int
  pictureUrl  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt 
}

model Comment {
  id        Int       @id @default(autoincrement())
  userId    Int       
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  parentId  Int?      
  parent    Comment?  @relation("reply", fields: [parentId], references: [id])
  replies   Comment[] @relation("reply")
  postId    Int       
  post      Post      @relation(fields: [postId], references: [id])
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Post {
  id          Int       @id @default(autoincrement())
  userId      Int       @unique
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment     Comment[]
  category    Category[]
  title       String    @unique
  content     String
  imageUrl    String
  publishedAt DateTime? 
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  post      Post[]
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
